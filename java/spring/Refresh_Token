서버에서 발급받은 Access Token은 서버에서 지정해준 수명이 지나면 유효성이 사라지게 된다.
그 이유는 다른사람에게 탈취당할 경우 우려가 있어 이 수명이 짧다면 자주 토큰을 새로 발급받으면 보안성으로선 유리할 수 있으나,
그만큼 사용자는 불편해지기에 Refresh Token이 생겼다.  Refresh token은 access token을 재발급받을 수 있는 token이다.
이 token은 서버에 저장되기 때문에(stateful) refresh token이 해커에 의해 탈취당했다고 판단되었을 때 서버에서 refresh token을 삭제함으로써 강제 로그아웃을 시킬 수 있다.

장점

- 새로 고침 상황에서 백엔드 서버까지 요청이 전달되지 않아도 된다.
    
    프론트 서버 session에 refresh token과 access token이 사용자마다 저장되어 있기 때문에 access token을 얻기 위해 추가로 백엔드 서버로 요청을 보낼 필요가 없다.
    요청 횟수에서 경제적이라 할 수 있다.
    

단점

- 사용자가 많아질 때 session 관리가 힘들다.
    
    사용자가 많아지게 되면 하나의 WAS를 여러개의 WAS로 나눠 사용량을 분배해야 한다고 한다.
    그럼 session도 WAS마다 생겨나는데, session 정보를 요청하는 브라우저 입장에서는 이걸 모르니 WAS 앞 단인 웹서버에서 적절한 WAS의 session에 접근할 수 있도록 잘 연결해주어야 한다.
    이 과정이 꽤 복잡하다고 하는데 프론트가 이를 관리하기에는 서버 지식이 깊게 필요하고, 프론트 issue도 많기 때문에 프론트가 서버 issue까지 관리하기가 힘들 것으로 판단된다
